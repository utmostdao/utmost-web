/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/swap-tokens': {
    get: {
      parameters: {
        query: {
          /**
           * 页码
           * 从 1 开始
           * 不传默认为第一页
           */
          pageNo: number
          /**
           * 每页个数
           * 不传默认为 20
           * 最大为 1000
           */
          pageSize: number
          /** 代币网络 */
          network: string
          /** 代币符号精准搜索，代币名称模糊搜索 */
          condition?: string
          /** 钱包地址，查询钱包余额 */
          userAddress?: string
          /** 0:代币,1:brc20,2:ferc20 */
          tokenType?: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm-svc.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description 是否还有前一页 */
              hasPrev: boolean
              /** @description 当前页码 */
              pageNo: number
              /** @description 总页数 */
              totalPage: number
              /** @description 每页个数 */
              pageSize: number
              /** @description 是否还有后一页 */
              hasNext: boolean
              /** @description 总数 */
              totalCount: number
              /** @description 数据域 */
              items: {
                /** @description swap代币详情代币合约地址 */
                swapTokenContractAddress?: string
                /** @description swap代币详情名称 */
                swapTokenName?: string
                /** @description swap代币详情代币符号 */
                swapTokenSymbol?: string
                /** @description swap代币详情代币网络 */
                swapTokenNetwork?: string
                /** @description swap代币详情ID */
                swapTokenID?: string
                /** @description swap代币详情代币图标 */
                swapTokenIcon?: string
                /** @description swap代币详情代币小数位 */
                swapTokenDecimals?: string
                /** @description swap代币兑换美元市值 */
                usdExchange?: number
                /** @description swap代币法币汇率Map */
                legalTenderExchangeRatio?: { [key: string]: unknown }
                balance: string
                isBrc20: boolean
                swapThirdPartySymbol: string
              }[]
            }
          }
        }
      }
    }
  }
  '/swap-token': {
    get: {
      parameters: {
        query: {
          /** swap代币详情ID */
          swapTokenID: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm-svc.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description swap代币详情代币合约地址 */
              swapTokenContractAddress: string
              /** @description swap代币详情名称 */
              swapTokenName: string
              /** @description swap代币详情代币符号 */
              swapTokenSymbol: string
              /** @description swap代币详情代币网络 */
              swapTokenNetwork: string
              /** @description swap代币详情ID */
              swapTokenID: string
              /** @description swap代币详情代币图标 */
              swapTokenIcon: string
              /** @description swap代币详情代币小数位 */
              swapTokenDecimals: string
              swapTokenIsBrc20: string
            }
          }
        }
      }
    }
    post: {
      parameters: {
        body: {
          /** 请求参数 */
          root?: {
            /** @description 代币符号 */
            symbol: string
            /** @description 代币小数位 */
            decimals: string
            /** @description 名称 */
            name: string
            /** @description 代币图标 */
            icon: string
            /** @description 代币合约地址 */
            contractAddress: string
            /** @description 代币网络 */
            network: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm-svc.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: { [key: string]: unknown }
          }
        }
      }
    }
    delete: {
      parameters: {
        body: {
          /** 请求参数 */
          root?: {
            /** @description swap代币详情ID */
            swapTokenID: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm-svc.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: { [key: string]: unknown }
          }
        }
      }
    }
  }
  '/router': {
    get: {
      parameters: {
        query: {
          /** swap合约路由ID */
          routerID: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm-svc.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description swap合约路由代币合约地址 */
              routerContractAddress: string
              /** @description swap合约路由名称 */
              routerName: string
              /** @description swap合约路由aggregatorID */
              routerAggregatorID: string
              /** @description swap合约路由api地址 */
              routerApiUrl: string
              /** @description swap合约路由ID */
              routerID: string
              /** @description swap合约路由类型 */
              routerType: string
              /** @description swap合约路由swap合约网络 */
              routerNetwork: string
            }
          }
        }
      }
    }
    put: {
      parameters: {
        body: {
          /** 请求参数 */
          root?: {
            /** @description api地址 */
            apiUrl: string
            /** @description swap合约路由ID */
            routerID: string
            /** @description 名称 */
            name: string
            /** @description 代币合约地址 */
            contractAddress: string
            /** @description aggregatorID */
            aggregatorID: string
            /** @description 类型 */
            type: string
            /** @description swap合约网络 */
            network: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm-svc.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: { [key: string]: unknown }
          }
        }
      }
    }
    post: {
      parameters: {
        body: {
          /** 请求参数 */
          root?: {
            /** @description api地址 */
            apiUrl: string
            /** @description 名称 */
            name: string
            /** @description 代币合约地址 */
            contractAddress: string
            /** @description aggregatorID */
            aggregatorID: string
            /** @description 类型 */
            type: string
            /** @description swap合约网络 */
            network: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm-svc.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: { [key: string]: unknown }
          }
        }
      }
    }
    delete: {
      parameters: {
        body: {
          /** 请求参数 */
          root?: {
            /** @description swap合约路由ID */
            routerID: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm-svc.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: { [key: string]: unknown }
          }
        }
      }
    }
  }
  '/routers': {
    get: {
      parameters: {
        query: {
          /**
           * 页码
           * 从 1 开始
           * 不传默认为第一页
           */
          pageNo: number
          /**
           * 每页个数
           * 不传默认为 20
           * 最大为 1000
           */
          pageSize: number
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm-svc.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              /** @description 是否还有前一页 */
              hasPrev: boolean
              /** @description 当前页码 */
              pageNo: number
              /** @description 总页数 */
              totalPage: number
              /** @description 每页个数 */
              pageSize: number
              /** @description 是否还有后一页 */
              hasNext: boolean
              /** @description 总数 */
              totalCount: number
              /** @description 数据域 */
              items: {
                /** @description swap合约路由代币合约地址 */
                routerContractAddress?: string
                /** @description swap合约路由名称 */
                routerName?: string
                /** @description swap合约路由aggregatorID */
                routerAggregatorID?: string
                /** @description swap合约路由api地址 */
                routerApiUrl?: string
                /** @description swap合约路由ID */
                routerID?: string
                /** @description swap合约路由类型 */
                routerType?: string
                /** @description swap合约路由swap合约网络 */
                routerNetwork?: string
              }[]
            }
          }
        }
      }
    }
  }
  '/swap:chain-details': {
    get: {
      parameters: {}
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm-svc.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: {
              swapNetwork: string
              netWorkName: string
              chainID: string
              chainIcon: string
              isActive: string
            }[]
          }
        }
      }
    }
  }
  '/swap': {
    post: {
      parameters: {
        body: {
          root?: {
            from: string
            to: string
            value: number
            hash: string
            swapID: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: number
            msg: string
            /** @description hash */
            data: string
          }
        }
      }
    }
  }
  '/swap-rebates': {
    get: {
      parameters: {
        query: {
          /** 用户钱包地址 */
          pageNo: number
          pageSize: number
          userAddress: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            msg?: string
            code?: string
            data: {
              hasPrev: boolean
              pageNo: number
              totalPage: number
              pageSize: number
              hasNext: boolean
              totalCount: number
              items: {
                swapRecordSrcNetwork: string
                swapRecordDstNetwork: string
                swapRecordSrcTxHash: string
                swapRecordDstTxHash: string
                swapRecordTxStatus: string
                swapRecordUserAddress: string
                swapRecordID: string
                swapRecordSrcTokenSymbol: string
                swapRecordDstTokenSymbol: string
                swapRecordSrcAmount: string
                swapRecordDstAmount: string
                swapRecordSrcTxTime: string
                swapRecordDstTxTime: string
                swapRecordSrcTokenLogo: string
                swapRecordDstTokenLogo: string
                swapRecordSlippage: string
                swapRecordErrorMsg: string
                /** @description 邀请码 */
                referralCode: string
                /** @description 交易手续费 */
                feeAmount: string
                /** @description 费用货币地址 */
                feeTokenAddress: string
                /** @description 费用货币标志 */
                feeTokenSymbol: string
                /** @description 费用货币Logo */
                feeTokenLogo: string
                /** @description 积分 */
                score: number
                /** @description 返佣值 */
                rebate: number
              }[]
            }
          }
        }
      }
    }
  }
  '/swap:confirmcallback': {
    post: {
      parameters: {
        body: {
          root?: {
            /** @description 源链 */
            srcNetwork: string
            /** @description 交易hash */
            hash: string
            /** @description confirm传递过来的确认单编号 */
            confirmBusinId: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: {
              /** @description 是否成功 */
              success: string
              /** @description 错误信息 */
              error: string
            }
            /** @description 是否失败 */
            fail: boolean
          }
        }
      }
    }
  }
  '/swap-records': {
    get: {
      parameters: {
        query: {
          /**
           * 页码
           * 从 1 开始
           * 不传默认为第一页
           */
          pageNo: number
          /**
           * 每页个数
           * 不传默认为 20
           * 最大为 1000
           */
          pageSize: number
          /** 用户地址 */
          userAddress: string
          status?: string
          network?: string
          hash?: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            msg?: string
            code?: string
            data: {
              hasPrev: boolean
              pageNo: number
              totalPage: number
              pageSize: number
              hasNext: boolean
              totalCount: number
              items: {
                swapRecordSrcNetwork: string
                swapRecordDstNetwork: string
                swapRecordSrcTxHash: string
                swapRecordDstTxHash: string
                swapRecordTxStatus: string
                swapRecordUserAddress: string
                swapRecordID: string
                swapRecordSrcTokenSymbol: string
                swapRecordDstTokenSymbol: string
                swapRecordSrcAmount: string
                swapRecordDstAmount: string
                swapRecordSrcTxTime: string
                swapRecordDstTxTime: string
                swapRecordSrcTokenLogo: string
                swapRecordDstTokenLogo: string
                swapRecordSlippage: string
                swapRecordErrorMsg: string
                /** @description 邀请码 */
                referralCode: string
                /** @description 交易手续费 */
                feeAmount: string
                /** @description 费用货币地址 */
                feeTokenAddress: string
                /** @description 费用货币标志 */
                feeTokenSymbol: string
                /** @description 费用货币Logo */
                feeTokenLogo: string
                /** @description 积分 */
                score: number
                /** @description 返佣值 */
                rebate: number
              }[]
            }
          }
        }
      }
    }
  }
  '/swap-record': {
    post: {
      parameters: {
        body: {
          /** 请求参数 */
          root?: {
            /** @description 交易状态 */
            txStatus: string
            /** @description 用户地址 */
            userAddress: string
            /** @description 卖出代币符号 */
            srcTokenSymbol: string
            /** @description 买入代币符号 */
            dstTokenSymbol: string
            /** @description 交易hash */
            txHahs: string
            /** @description 卖出数量 */
            srcAmount: string
            /** @description 名称 */
            name: string
            /** @description 手续费率 */
            swapFeeRatio: string
            /** @description 滑点 */
            slippage: string
            /** @description swap合约网络 */
            network: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            /**
             * @description 返回消息
             * 异常时返回错误信息
             */
            msg: string
            /**
             * @description 返回码
             * 成功时返回 000 异常时返回码如 105.abm-svc.UNKNOWN
             */
            code: string
            /** @description 返回数据 */
            data: { [key: string]: unknown }
          }
        }
      }
    }
  }
  '/swap:gas': {
    get: {
      parameters: {
        query: {
          /** 网络 */
          network?: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: {
              safeGasPrice: string
              /** @description 推荐 */
              proposeGasPrice: string
              /** @description 快 */
              fastGasPrice: string
              suggestBaseFee: string
            }
            fail: boolean
          }
        }
      }
    }
  }
  '/swap-record:confirm': {
    post: {
      parameters: {
        body: {
          root?: {
            /** @description 网络 */
            confirmDetails: {
              network: string
              hash: string
            }[]
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code?: string
            msg?: string
            data?: {
              network: string
              hash: string
            }[]
            fail?: boolean
          }
        }
      }
    }
  }
  '/swap-summary': {
    get: {
      parameters: {
        query: {
          /** 用户地址 */
          userAddress: string
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code?: string
            msg?: string
            data?: {
              allRebated?: string
              rebateRatio?: string
              unpaid?: string
              referralCode?: string
              invitedTimes?: string
              allScore?: string
            }
            fail?: boolean
          }
        }
      }
    }
  }
  '/swap:confirm': {
    post: {
      parameters: {
        body: {
          root?: {
            srcNetwork: string
            dstNetwork: string
            srcRouterName?: string
            dstRouterName?: string
            interTokenSymbol: string
            srcUserAddress: string
            dstUserAddress: string
            srcTokenAddress: string
            srcAmount: string
            dstTokenAddress: string
            slippage: number
            /** @description 邀请码 */
            referralCode?: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code: string
            msg: string
            data: {
              from: string
              to: string
              value: string
              txData: string
              /** @description swapID，swap兑换接口中使用 */
              swapCacheId: string
              matchSlippage: boolean
              expectedReturnAmount: string
              actualSlippage: string
              minReturnAmount: string
              /** @description 邀请码 */
              referralCode: string
              /** @description 确认单业务编号 */
              confirmBusinId: string
            }
            fail: boolean
          }
        }
      }
    }
  }
  '/swap:preview': {
    post: {
      parameters: {
        body: {
          root?: {
            /** @description 网络 */
            dstNetwork: string
            srcNetwork: string
            /** @description 用户地址 */
            srcUserAddress: string
            dstUserAddress: string
            /** @description 卖出代币地址 */
            srcTokenAddress: string
            /** @description 卖出代币数量 */
            srcAmount: number
            /** @description 买入代币地址 */
            dstTokenAddress: string
            /** @description 滑点，15%传0.15 */
            slippage: number
            /** @description 邀请码 */
            referralCode?: string
          }
        }
      }
      responses: {
        /** successful operation */
        200: {
          schema: {
            code?: string
            msg?: string
            data?: {
              expiredAt: string
              srcRouterName: string
              dstRouterName: string
              interTokenSymbol: string
              expectedReturnAmount: string
              /** @description 美元 */
              boolSwapFee: string
              /** @description 美元 */
              utmostFee: string
              /** @description ETHER 用起始链汇率 */
              msgFee: string
              /** @description ETHER 用起始链汇率 */
              dstNetworkGasFee: string
              /** @description gwei */
              srcNetworkGasPrice: string
              srcNativeExchangeRate: string
              dstNativeExchangeRate: string
              satisfy: string
              msgFeePrice: string
              to: string
              srcUsdExchange: string
              dstUsdExchange: string
              minReturnAmount: string
            }
            fail?: boolean
          }
        }
      }
    }
  }
}

export interface operations {}

export interface external {}

export type SwapTokensGetParams =
  paths['/swap-tokens']['get']['parameters']['query']
export type SwapTokens =
  paths['/swap-tokens']['get']['responses'][200]['schema']['data']
export type SwapTokenGetParams =
  paths['/swap-token']['get']['parameters']['query']
export type SwapToken =
  paths['/swap-token']['get']['responses'][200]['schema']['data']
export type SwapTokenPostParams =
  paths['/swap-token']['post']['parameters']['body']['root']
export type SwapTokenPost =
  paths['/swap-token']['post']['responses'][200]['schema']['data']
export type SwapTokenDeleteParams =
  paths['/swap-token']['delete']['parameters']['body']['root']
export type RouterGetParams = paths['/router']['get']['parameters']['query']
export type Router = paths['/router']['get']['responses'][200]['schema']['data']
export type RouterPutParams =
  paths['/router']['put']['parameters']['body']['root']
export type RouterPostParams =
  paths['/router']['post']['parameters']['body']['root']
export type RouterPost =
  paths['/router']['post']['responses'][200]['schema']['data']
export type RouterDeleteParams =
  paths['/router']['delete']['parameters']['body']['root']
export type RoutersGetParams = paths['/routers']['get']['parameters']['query']
export type Routers =
  paths['/routers']['get']['responses'][200]['schema']['data']
export type SwapChainDetailsGetParams =
  paths['/swap:chain-details']['get']['parameters']
export type SwapChainDetails =
  paths['/swap:chain-details']['get']['responses'][200]['schema']['data']
export type SwapPostParams =
  paths['/swap']['post']['parameters']['body']['root']
export type SwapPost =
  paths['/swap']['post']['responses'][200]['schema']['data']
export type SwapRebatesGetParams =
  paths['/swap-rebates']['get']['parameters']['query']
export type SwapRebates =
  paths['/swap-rebates']['get']['responses'][200]['schema']['data']
export type SwapConfirmcallbackPostParams =
  paths['/swap:confirmcallback']['post']['parameters']['body']['root']
export type SwapConfirmcallbackPost =
  paths['/swap:confirmcallback']['post']['responses'][200]['schema']['data']
export type SwapRecordsGetParams =
  paths['/swap-records']['get']['parameters']['query']
export type SwapRecords =
  paths['/swap-records']['get']['responses'][200]['schema']['data']
export type SwapRecordPostParams =
  paths['/swap-record']['post']['parameters']['body']['root']
export type SwapRecordPost =
  paths['/swap-record']['post']['responses'][200]['schema']['data']
export type SwapGasGetParams = paths['/swap:gas']['get']['parameters']['query']
export type SwapGas =
  paths['/swap:gas']['get']['responses'][200]['schema']['data']
export type SwapRecordConfirmPostParams =
  paths['/swap-record:confirm']['post']['parameters']['body']['root']
export type SwapRecordConfirmPost =
  paths['/swap-record:confirm']['post']['responses'][200]['schema']['data']
export type SwapSummaryGetParams =
  paths['/swap-summary']['get']['parameters']['query']
export type SwapSummary =
  paths['/swap-summary']['get']['responses'][200]['schema']['data']
export type SwapConfirmPostParams =
  paths['/swap:confirm']['post']['parameters']['body']['root']
export type SwapConfirmPost =
  paths['/swap:confirm']['post']['responses'][200]['schema']['data']
export type SwapPreviewPostParams =
  paths['/swap:preview']['post']['parameters']['body']['root']
export type SwapPreviewPost =
  paths['/swap:preview']['post']['responses'][200]['schema']['data']
